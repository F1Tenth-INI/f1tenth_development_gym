
controller:
  general:
    cost_function: 'default' #from 'quadratic-boundary', 'quadratic-boundary-nonconvex', 'default'
  mppi:
    SEED: "None"                            # Seed for rng, for MPPI only, put "None" to set random seed (do it when you generate data for training!)
    dt: 0.1                              # sec
    mpc_horizon: 0.5                      # sec
    num_rollouts: 1000                      # Number of Monte Carlo samples
    update_every: 1                       # Cost weighted update of inputs every ... steps
    predictor_type: "EulerTF"               # One of ["Euler", "NeuralNet"]
    NET_NAME: 'Dense-5IN-64H1-64H2-3OUT-0'  # Applies only if predictor_type is NeuralNet
    dd_weight: 120.0
    cc_weight: 0.0
    ccrc_weight: 0.0
    cost_noise: 0.0                       # Noise on stage cost weights by +/- this value, we usually set 0.5 to explore various controllers while collecting data for training, 0 othewise
    control_noise: 0.0                    # Noise on top of the calculated control input by +/- this value, we usually set 0.5 to explore various controllers while collecting data for training, 0.1 to test an not-ideal case
    R: 1.0                                # How much to punish Q
    LBD: 0.001                            # Cost parameter lambda
    LBD_mc: 10.0
    NU: 1000.0                            # Exploration variance
    NU_mc: 20.0                              # Exploration variance for mathematical correct version
    SQRTRHOINV: [0.5, 0.01]
    SQRTRHOINV_mc: [0.002]                      # Sampling variance
    GAMMA: 1.00                           # Future cost discount
    SAMPLING_TYPE: "interpolated"         # One of ["iid", "random_walk", "uniform", "repeated", "interpolated"]
    LOGGING: False                        # Collect and show detailed insights into the controller's behavior
    WASH_OUT_LEN: 100                     # Only matters if RNN used as predictor; For how long MPPI should be desactivated (replaced either with LQR or random input) to give memory units time to settle
    CLIP_CONTROL_INPUT: [[1, -1],[4, 1]]       # How to clip control input, symmetric # speed, steering angle

data_generator:
  SEED: 1  # If "None" random seed based on datetime is used