mpc:
  optimizer: mppi # 'mppi' or 'rpgd-tf'
  predictor_specification: ODE_TF    # Dense-8IN-128H1-128H2-6OUT-43 Can be "ODE", "ODE_TF", network/GP name (possibly with path) e.g. 'GRU-6IN-32H1-32H2-5OUT-0'/'SGP_30' or a name of a custom predictor. For more info see config_predictors in SI_Toolkit_ASF

  cost_function_specification: 'racing'  # One of "default", "quadratic_boundary_grad", "quadratic_boundary_nonconvex", "quadratic_boundary"
  computation_library: tensorflow  # One of "numpy", "tensorflow", "pytorch". Defaults to "numpy" if none given.
  controller_logging: false
  calculate_optimal_trajectory: true
neural-imitator-tf:
  seed: null                            # If null, random seed based on datetime is used
  PATH_TO_MODELS: './Control_Toolkit_ASF/Controllers/models_for_neural_imitator_tf/'
  net_name: 'GRU-6IN-32H1-32H2-1OUT-4'
  mpc_horizon: 40
  num_rollouts: 1
  controller_logging: True
neural-imitator-pytorch:
  seed: null                            # If null, random seed based on datetime is used
  PATH_TO_MODELS: './Control_Toolkit_ASF/Controllers/models_for_neural_imitator_tf/'
  net_name: 'GRU-6IN-32H1-32H2-1OUT-0'
  mpc_horizon: 40
  num_rollouts: 1
  controller_logging: True