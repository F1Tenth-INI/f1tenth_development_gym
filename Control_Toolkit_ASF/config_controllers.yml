mpc:
  optimizer: mppi # 'mppi' or 'rpgd-tf'
  # optimizer: 'rpgd-tf' # 'mppi' or 'rpgd-tf'
  # predictor_specification: ODE_TF
  predictor_specification: ActiveLearning
  # predictor_specification: Random_DNN    # Dense-8IN-128H1-128H2-6OUT-43 Can be "ODE", "ODE_TF", network/GP name (possibly with path) e.g. 'GRU-6IN-32H1-32H2-5OUT-0'/'SGP_30' or a name of a custom predictor. For more info see config_predictors in SI_Toolkit_ASF
  # predictor_specification: Random_LSTM    # Dense-8IN-128H1-128H2-6OUT-43 Can be "ODE", "ODE_TF", network/GP name (possibly with path) e.g. 'GRU-6IN-32H1-32H2-5OUT-0'/'SGP_30' or a name of a custom predictor. For more info see config_predictors in SI_Toolkit_ASF
  # predictor_specification: Last_OnlineLearning    # Dense-8IN-128H1-128H2-6OUT-43 Can be "ODE", "ODE_TF", network/GP name (possibly with path) e.g. 'GRU-6IN-32H1-32H2-5OUT-0'/'SGP_30' or a name of a custom predictor. For more info see config_predictors in SI_Toolkit_ASF

  cost_function_specification: 'racing'  # One of "default", "quadratic_boundary_grad", "quadratic_boundary_nonconvex", "quadratic_boundary"
  computation_library: tensorflow  # One of "numpy", "tensorflow", "pytorch". Defaults to "numpy" if none given.
  controller_logging: false
  calculate_optimal_trajectory: true

  online_learning:
    normalize: false
    activated: true
    buffer_length: 100  # Number of datapoints to train on
    train_every_n_steps: 100
    epochs_per_training: 20
    batch_size: 100
    optimizer: 'adam'  # SGD or Adam
    optimizers:
      adam:
        lr: 0.01  # Default: 0.001
      SGD:
        lr: 0.001  # Default 0.01
        momentum: 0.0001  # Default 0.0

neural-imitator:
  seed: null                            # If null, random seed based on datetime is used
  PATH_TO_MODELS: './SI_Toolkit_ASF/Experiments/Obstacle_v1/Models/'
  net_name: 'Dense-89IN-64H1-64H2-2OUT-0'  # TF
  controller_logging: True
  computation_library: tensorflow
  input_at_input: true  # If true the network input is provided to step function, if not, system state is provided and controller tries to get the remaining inputs from environment parameters`
stanley:
  controller_logging: False
  computation_library: numpy