
import yaml
import os
from utilities.Settings import Settings

def overwrite_from_master_settings():
    
    
    # control_toolkit_config_path = "Control_Toolkit_ASF"
    # if not os.path.isfile(os.path.join("Control_Toolkit_ASF", "config_controllers.yml")):
    control_toolkit_config_path = os.path.join("Control_Toolkit_ASF", "Config_Templates")
        
    config_controllers = yaml.load(open(os.path.join(control_toolkit_config_path, "config_controllers.yml")),Loader=yaml.FullLoader)
    config_optimizers = yaml.load(open(os.path.join(control_toolkit_config_path, "config_optimizers.yml")), Loader=yaml.FullLoader)
    config_cost_function = yaml.load(open(os.path.join(control_toolkit_config_path, "config_cost_function.yml")), Loader=yaml.FullLoader)

    config_controllers['mpc']['calculate_optimal_trajectory'] = Settings.mpc_calculate_optimal_trajectory
    config_controllers['mpc']['optimizer'] = Settings.mpc_optimizer

    config_optimizers['mppi']['mpc_horizon'] = Settings.mppi_mpc_horizon
    config_optimizers['mppi']['num_rollouts'] = Settings.mppi_num_rollouts
    config_optimizers['mppi']['LBD'] = Settings.mppi_LBD
    config_optimizers['mppi']['NU'] = Settings.mppi_NU
    config_optimizers['mppi']['SQRTRHOINV'] = Settings.mppi_SQRTRHOINV
    config_optimizers['mppi']['period_interpolation_inducing_points'] = Settings.mppi_period_interpolation_inducing_points

    config_cost_function['Car']['racing']['cc_weight'] = Settings.cc_weight
    config_cost_function['Car']['racing']['ccrc_weight'] = Settings.ccrc_weight
    config_cost_function['Car']['racing']['R'] = Settings.R
    config_cost_function['Car']['racing']['steering_cost_weight'] = Settings.steering_cost_weight
    config_cost_function['Car']['racing']['angular_velocity_cost_weight'] = Settings.angular_velocity_cost_weight
    config_cost_function['Car']['racing']['slipping_cost_weight'] = Settings.slipping_cost_weight
    config_cost_function['Car']['racing']['terminal_speed_cost_weight'] = Settings.terminal_speed_cost_weight
    config_cost_function['Car']['racing']['velocity_diff_to_waypoints_cost_weight'] = Settings.velocity_diff_to_waypoints_cost_weight
    config_cost_function['Car']['racing']['speed_control_diff_to_waypoints_cost_weight'] = Settings.speed_control_diff_to_waypoints_cost_weight
    config_cost_function['Car']['racing']['distance_to_waypoints_cost_weight'] = Settings.distance_to_waypoints_cost_weight
    config_cost_function['Car']['racing']['target_distance_cost_weight'] = Settings.target_distance_cost_weight
    config_cost_function['Car']['racing']['acceleration_cost_weight'] = Settings.acceleration_cost_weight
    config_cost_function['Car']['racing']['max_acceleration'] = Settings.max_acceleration
    config_cost_function['Car']['racing']['desired_max_speed'] = Settings.desired_max_speed
    config_cost_function['Car']['racing']['waypoint_velocity_factor'] = Settings.waypoint_velocity_factor 

    with open(os.path.join("Control_Toolkit_ASF", "config_controllers.yml"), 'w') as outfile:
        outfile.write("# This file is generated by /templates/config_controllers.yaml and setting_utilities.py. \n")
        outfile.write("# Do not change settings here but in Settings.py\n")
        yaml.dump(config_controllers, outfile, default_flow_style=False)
    with open(os.path.join("Control_Toolkit_ASF", "config_optimizers.yml"), 'w') as outfile:
        outfile.write("# This file is generated by /templates/config_optimizers.yaml and setting_utilities.py.\n")
        outfile.write("# Do not change settings here but in Settings.py\n")
        yaml.dump(config_optimizers, outfile, default_flow_style=False)
    with open(os.path.join("Control_Toolkit_ASF", "config_cost_function.yml"), 'w') as outfile:
        outfile.write("# This file is generated by /templates/config_cost_function.yaml and setting_utilities.py.\n")
        outfile.write("# Do not change settings here but in Settings.py\n")
        yaml.dump(config_cost_function, outfile, default_flow_style=False)



